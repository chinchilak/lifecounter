ScreenManager:
    HomeScreen:
        name: 'home'
    SettingsScreen:
        name: 'settings'
    MainScreen:
        name: 'main'

<HomeScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Life Counter App v0.3.1'
            font_size: 48
        Button:
            text: 'Application'
            font_size: 36
            on_release: app.root.current = 'main'
        Button:
            text: 'Settings'
            font_size: 36
            on_release: app.root.current = 'settings'
        Button:
            text: 'Exit'
            font_size: 36
            on_release: app.exit_app()

<SettingsScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Settings'
            font_size: 48
        Button:
            text: 'Application'
            font_size: 36
            on_release: app.root.current = 'main'
        Button:
            text: 'Menu'
            font_size: 36
            on_release: app.root.current = 'home'
        Button:
            text: 'Rotate'
            font_size: 36
            on_release: app.toggle_rotation()

        # ToggleButton:
        #     id: toggle_button
        #     text: 'Toggle Buttons'
        #     font_size: 24
        #     on_press: root.toggle_buttons()

        # BoxLayout:
        #     id: overlay_layout
        #     orientation: 'vertical'
        #     opacity: 0
        #     size_hint_y: None
        #     height: 0
            
        #     Button:
        #         text: 'Button 1'
            
        #     Button:
        #         text: 'Button 2'
            
        #     Button:
        #         text: 'Button 3'
            
        #     Button:
        #         text: 'Button 4'

<MainScreen>:
    RelativeLayout:
        Button:
            id: settings
            text: root.settings_label_text
            font_size: 36
            size_hint: None, None
            size: 160, 80
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            on_release: app.root.current = 'home'

        Button:
            id: coin_flip_label
            text: root.coin_flip_label_text
            font_size: 36
            size_hint: None, None
            size: 160, 80
            pos: settings.x, settings.y - 80 - 2*40
            background_normal: ""
            background_color: 0.25, 0.25, 0.25, 1
            on_release: root.coin_flip()

        Button:
            id: die_roll_label
            text: root.die_roll_label_text
            font_size: 36
            size_hint: None, None
            size: 160, 80
            pos: settings.x, settings.y + 80 + 2*40
            background_normal: ""
            background_color: 0.25, 0.25, 0.25, 1
            on_release: root.die_roll()

        Button:
            id: start_roll_label
            text: root.start_roll_label_text
            font_size: 36
            size_hint: None, None
            size: 160, 80
            pos: die_roll_label.x, die_roll_label.y + 80 + 2*40 + 40
            background_normal: ""
            background_color: 0.25, 0.25, 0.25, 1
            on_release: root.roll_dice()

        Button:
            id: reset_values_label
            text: root.reset_values_label_text
            font_size: 36
            size_hint: None, None
            size: 160, 80
            pos: coin_flip_label.x, coin_flip_label.y - 80 - 2*40 - 40
            background_normal: ""
            background_color: 0.25, 0.25, 0.25, 1
            on_release: root.reset_values()

# Main life counters
        Label:
            id: top_left_label
            text: str(root.values['top_left_label'])
            font_size: 192
            bold: True
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.2, 'center_y': 0.75}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_left_label')
            canvas.before:
                Color:
                    rgba: root.color_top_left
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True


        Label:
            id: top_right_label
            text: str(root.values['top_right_label'])
            font_size: 192
            bold: True
            rotated: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.8, 'center_y': 0.75}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_right_label')
            canvas.before:
                Color:
                    rgba: root.color_top_right
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

        Label:
            id: bottom_left_label
            text: str(root.values['bottom_left_label'])
            font_size: 192
            bold: True
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.2, 'center_y': 0.25}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_left_label')
            canvas.before:
                Color:
                    rgba: root.color_bottom_left
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

        Label:
            id: bottom_right_label
            text: str(root.values['bottom_right_label'])
            font_size: 192
            bold: True
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.8, 'center_y': 0.25}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_right_label')
            canvas.before:
                Color:
                    rgba: root.color_bottom_right
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

# Sub cmd dmg life counters - top left
        Label:
            id: top_left_cmd_dmg_across
            text: f"{root.values['top_left_cmd_dmg_across']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.4, 'center_y': 0.6}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_left_cmd_dmg_across')
            canvas.before:
                Color:
                    rgba: root.color_bottom_right
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

        Label:
            id: top_left_cmd_dmg_right
            text: f"{root.values['top_left_cmd_dmg_right']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: top_left_cmd_dmg_across.x, top_left_cmd_dmg_across.y + self.texture_size[1] + 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_left_cmd_dmg_right')
            canvas.before:
                Color:
                    rgba: root.color_top_right
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

        Label:
            id: top_left_cmd_dmg_down
            text: f"{root.values['top_left_cmd_dmg_down']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: top_left_cmd_dmg_across.x - self.texture_size[0] - 2*40, top_left_cmd_dmg_across.y
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_left_cmd_dmg_down')
            canvas.before:
                Color:
                    rgba: root.color_bottom_left
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

# Sub cmd dmg life counters - top right
        Label:
            id: top_right_cmd_dmg_across
            text: f"{root.values['top_right_cmd_dmg_across']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.6, 'center_y': 0.6}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_right_cmd_dmg_across')
            canvas.before:
                Color:
                    rgba: root.color_bottom_left
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

        Label:
            id: top_right_cmd_dmg_left
            text: f"{root.values['top_right_cmd_dmg_left']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: top_right_cmd_dmg_across.x, top_right_cmd_dmg_across.y + self.texture_size[1] + 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_right_cmd_dmg_left')
            canvas.before:
                Color:
                    rgba: root.color_top_left
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

        Label:
            id: top_right_cmd_dmg_down
            text: f"{root.values['top_right_cmd_dmg_down']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: top_right_cmd_dmg_across.x + self.texture_size[0] + 2*40, top_right_cmd_dmg_across.y
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_right_cmd_dmg_down')
            canvas.before:
                Color:
                    rgba: root.color_bottom_right
                Rectangle:
                    pos: self.pos
                    size: self.size
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

# Sub cmd dmg life counters - bottom left
        Label:
            id: bottom_left_cmd_dmg_across
            text: f"{root.values['bottom_left_cmd_dmg_across']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.4, 'center_y': 0.4}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_left_cmd_dmg_across')
            canvas.before:
                Color:
                    rgba: root.color_top_right
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

        Label:
            id: bottom_left_cmd_dmg_right
            text: f"{root.values['bottom_left_cmd_dmg_right']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: bottom_left_cmd_dmg_across.x, bottom_left_cmd_dmg_across.y - self.texture_size[1] - 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_left_cmd_dmg_right')
            canvas.before:
                Color:
                    rgba: root.color_bottom_right
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

        Label:
            id: bottom_left_cmd_dmg_up
            text: f"{root.values['bottom_left_cmd_dmg_up']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: bottom_left_cmd_dmg_across.x - self.texture_size[0] - 2*40, bottom_left_cmd_dmg_across.y
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_left_cmd_dmg_up')
            canvas.before:
                Color:
                    rgba: root.color_top_left
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

# Sub cmd dmg life counters - bottom right
        Label:
            id: bottom_right_cmd_dmg_across
            text: f"{root.values['bottom_right_cmd_dmg_across']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos_hint: {'center_x': 0.6, 'center_y': 0.4}
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_right_cmd_dmg_across')
            canvas.before:
                Color:
                    rgba: root.color_top_left
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

        Label:
            id: bottom_right_cmd_dmg_left
            text: f"{root.values['bottom_right_cmd_dmg_left']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: bottom_right_cmd_dmg_across.x + self.texture_size[0] + 2*40, bottom_right_cmd_dmg_across.y
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_right_cmd_dmg_left')
            canvas.before:
                Color:
                    rgba: root.color_top_right
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

        Label:
            id: bottom_right_cmd_dmg_up
            text: f"{root.values['bottom_right_cmd_dmg_up']:02d}"
            font_size: 96
            bold: False
            color: root.font_color
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: bottom_right_cmd_dmg_across.x, bottom_right_cmd_dmg_across.y - self.texture_size[1] - 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_right_cmd_dmg_up')
            canvas.before:
                Color:
                    rgba: root.color_bottom_left
                Rectangle:
                    pos: self.pos
                    size: self.size
            rotated: False

# Poison counters
        Label:
            id: top_left_poison
            text: f"{root.values['top_left_poison']:02d}"
            font_size: 96
            bold: False
            color: root.font_color_poison
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: top_left_cmd_dmg_across.x - self.texture_size[0] - 2*40, top_left_cmd_dmg_across.y + self.texture_size[1] + 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_left_poison')
            canvas.before:
                Color:
                    rgba: 0, 0.25, 0, 1
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True

        Label:
            id: top_right_poison
            text: f"{root.values['top_right_poison']:02d}"
            font_size: 96
            bold: False
            color: root.font_color_poison
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: top_right_cmd_dmg_across.x + self.texture_size[0] + 2*40, top_right_cmd_dmg_across.y + self.texture_size[1] + 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('top_right_poison')
            canvas.before:
                Color:
                    rgba: 0, 0.25, 0, 1
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix
            rotated: True
            
        Label:
            id: bottom_left_poison
            text: f"{root.values['bottom_left_poison']:02d}"
            font_size: 96
            bold: False
            color: root.font_color_poison
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: bottom_left_cmd_dmg_across.x - self.texture_size[0] - 2*40, bottom_left_cmd_dmg_across.y - self.texture_size[1] - 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_left_poison')
            canvas.before:
                Color:
                    rgba: 0, 0.25, 0, 1
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
            rotated: False

        Label:
            id: bottom_right_poison
            text: f"{root.values['bottom_right_poison']:02d}"
            font_size: 96
            bold: False
            color: root.font_color_poison
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            pos: bottom_right_cmd_dmg_across.x + self.texture_size[0] + 2*40, bottom_right_cmd_dmg_across.y - self.texture_size[1] - 2*40
            on_touch_up:
                if self.collide_point(*args[1].pos): root.increment_value('bottom_right_poison')
            canvas.before:
                Color:
                    rgba: 0, 0.25, 0, 1
                Line:
                    width: 2
                    rectangle: self.x, self.y, self.width, self.height
            rotated: False

# Start results
        Label:
            id: result_label_0
            pos_hint: {'center_x': 0.25, 'center_y': 0.95}
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            font_size: 72
            text: ''
            bold: True
            color: 0, 0, 0, 1
            canvas.before:
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix

        Label:
            id: result_label_1
            pos_hint: {'center_x': 0.75, 'center_y': 0.95}
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            font_size: 72
            text: ''
            bold: True
            color: 0, 0, 0, 1
            canvas.before:
                PushMatrix
                Rotate:
                    angle: -180
                    origin: self.center
            canvas.after:
                PopMatrix

        Label:
            id: result_label_2
            pos_hint: {'center_x': 0.25, 'center_y': 0.05}
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            font_size: 72
            text: ''
            bold: True
            color: 0, 0, 0, 1

        Label:
            id: result_label_3
            pos_hint: {'center_x': 0.75, 'center_y': 0.05}
            size_hint: None, None
            size: self.texture_size[0] + 40, self.texture_size[1] + 40
            font_size: 72
            text: ''
            bold: True
            color: 0, 0, 0, 1